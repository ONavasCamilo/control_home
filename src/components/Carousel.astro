<section>
  <div class="slider__container">
    <div id="slider" class="slider">
      <div class="slider__element">
        <img src="/carousel1portada.jpg" alt="CARRUSEL1" class="slide active" />
      </div>
      <div class="slider__element">
        <img src="/carousel2.png" alt="CARRUSEL2" class="slide" />
      </div>
      <div class="slider__element">
        <img src="/carousel3.png" alt="CARRUSEL3" class="slide" />
      </div>
      <div class="slider__element">
        <img src="/carousel4.jpg" alt="CARRUSEL4" class="slide" />
      </div>
    </div>
  </div>
  <div class="slider-buttons">
    <button id="button-left" class="button button--left">{`<`}</button>
    <button id="button-right" class="button button--right">{`>`}</button>
  </div>
  <div class="dots">
    <span class="dot active"></span>
    <span class="dot"></span>
    <span class="dot"></span>
    <span class="dot"></span>
  </div>
</section>

<script>
  const slider = document.getElementById("slider");
  const buttonLeft = document.getElementById("button-left");
  const buttonRight = document.getElementById("button-right");

  const sliderElements = document.querySelectorAll(".slider__element");

  const rootStyles = document.documentElement.style;

  const timeTransition = 500;

  let slideCounter = 0;
  let isInTransition = false;

  const DIRECTION = {
    RIGHT: "RIGHT",
    LEFT: "LEFT",
  } as const;

  type DirectionType = keyof typeof DIRECTION;

  const reorderSlide = () => {
    const transformValue = getTransformValue();
    rootStyles.setProperty("--transition", "none");
    if (slideCounter === sliderElements.length - 1) {
      if (!slider?.firstElementChild) return;
      slider?.appendChild(slider.firstElementChild);
      rootStyles.setProperty(
        "--slide-transform",
        `${transformValue + sliderElements[slideCounter].scrollWidth}px`
      );
      slideCounter--;
    } else if (slideCounter === 0) {
      if (!slider?.lastElementChild) return;
      slider?.prepend(slider.lastElementChild);
      rootStyles.setProperty(
        "--slide-transform",
        `${transformValue - sliderElements[slideCounter].scrollWidth}px`
      );
      slideCounter++;
    }
    isInTransition = false;
  };

  const getTransformValue = () =>
    Number(rootStyles.getPropertyValue("--slide-transform").replace("px", "")); // convertimos a number y borramos 'px' para obtener el valor number correcto y dinamico

  const moveSlide = (direction: DirectionType) => {
    if (isInTransition) return;
    const transformValue = getTransformValue();
    rootStyles.setProperty("--transition", `transform ${timeTransition}ms`);
    isInTransition = true;
    if (direction === DIRECTION.LEFT) {
      rootStyles.setProperty(
        "--slide-transform",
        `${transformValue + sliderElements[slideCounter].scrollWidth}px`
      );
      slideCounter--;
    } else if (direction === DIRECTION.RIGHT) {
      rootStyles.setProperty(
        "--slide-transform",
        `${transformValue - sliderElements[slideCounter].scrollWidth}px`
      );
      slideCounter++;
    }
  };

  buttonRight?.addEventListener("click", () => moveSlide(DIRECTION.RIGHT));
  buttonLeft?.addEventListener("click", () => moveSlide(DIRECTION.LEFT));

  slider?.addEventListener("transitionend", reorderSlide);
  reorderSlide();

  const slides = document.querySelectorAll(".slide");
  const dots = document.querySelectorAll(".dot");

  let currentIndex = 0;
  let isTransitioning = false;

  function updateSlider() {
    slides.forEach((slide, i) =>
      slide.classList.toggle("active", i === currentIndex)
    );
    dots.forEach((dot, i) =>
      dot.classList.toggle("active", i === currentIndex)
    );
  }

  function nextSlide() {
    if (isTransitioning) return;
    isTransitioning = true;
    currentIndex = (currentIndex + 1) % slides.length;
    updateSlider();
    setTimeout(() => {
      isTransitioning = false;
    }, timeTransition);
  }

  function prevSlide() {
    if (isTransitioning) return;
    isTransitioning = true;
    currentIndex = (currentIndex - 1 + slides.length) % slides.length;
    updateSlider();
    setTimeout(() => {
      isTransitioning = false;
    }, timeTransition);
  }

  buttonRight?.addEventListener("click", nextSlide);
  buttonLeft?.addEventListener("click", prevSlide);

  updateSlider();

  let startX = 0;
  let endX = 0;

  slider?.addEventListener("touchstart", (e) => {
    startX = e.touches[0].clientX;
  });

  slider?.addEventListener("touchmove", (e) => {
    endX = e.touches[0].clientX;
  });

  slider?.addEventListener("touchend", () => {
    const diff = startX - endX;

    if (Math.abs(diff) > 50) {
      if (isTransitioning) return;
      if (diff > 0) {
        moveSlide(DIRECTION.RIGHT);
        currentIndex = (currentIndex + 1) % slides.length;
      } else {
        moveSlide(DIRECTION.LEFT);
        currentIndex = (currentIndex - 1 + slides.length) % slides.length;
      }
      updateSlider();
      isTransitioning = true;
      setTimeout(() => {
        isTransitioning = false;
      }, timeTransition);
    }
  });
</script>

<style>
  :root {
    --slide-transform: 0;
    --transition: transform 1s;
  }

  img {
    max-width: 100%;
  }

  .slider {
    display: flex;
    transform: translateX(var(--slide-transform));
    transition: var(--transition);
  }

  .slider__container {
    width: 350px;
    height: 350px;
    margin: 20px auto;
    border-radius: 7px;
    background: white;
    box-shadow: 0px 4px 10px rgba(12, 139, 189, 0.35);
    overflow: hidden;
  }

  .slider__element {
    min-width: 100%;
    height: 300px;
    font-size: 3rem;
    text-align: center;
    line-height: 300px;
  }

  .slider-buttons {
    display: flex;
    justify-content: space-around;
    padding: 10px;
  }

  button {
    border-radius: 50%;
    border: 2px solid #329fd7;
    background: rgba(35, 62, 212, 0.06);
    color: #329fd7;
    width: 45px;
    height: 45px;
    font-size: 27px;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
  }

  .button:hover {
    background: #329fd7;
    color: white;
  }

  .dots {
    position: absolute;
    margin-top: -37px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 5px;
  }

  .dot {
    width: 10px;
    height: 10px;
    background: #ccc;
    border-radius: 50%;
  }

  .dot.active {
    background: #329fd7;
  }

  @media (min-width: 540px) {
    .slider__container {
      width: 450px;
      height: 450px;
    }

    @media (min-width: 920px) {
      section {
        position: absolute;
      }

      .slider__container {
        margin: 20px;
      }

      .slider-buttons {
        justify-content: left;
      }

      button {
        margin: 0 95px;
      }

      .dots {
        left: 0;
        margin: 0 245px;
        margin-top: -37px;
      }
    }

    @media (min-width: 1111px) {
      .slider__container {
        height: 560px;
        width: 560px;
        margin-top: 45px;
        margin-left: 30px;
      }

      button {
        margin: 0 125px;
      }

      .dots {
        left: 0;
        margin: 0 310px;
        margin-top: -37px;
      }
    }

    @media (min-width: 1910px) {
      .slider__container {
        height: 620px;
        width: 620px;
        margin-left: 130px;
      }
      button {
        margin: 0 193px;
      }

      .dots {
        margin: 0 438px;
        margin-top: -37px;
      }
    }
  }
</style>
